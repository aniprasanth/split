// Mocks generated by Mockito 5.4.5 from annotations
// in splitzy/test/comprehensive_functionality_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:flutter_contacts/flutter_contacts.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:splitzy/models/expense_model.dart' as _i9;
import 'package:splitzy/models/group_model.dart' as _i8;
import 'package:splitzy/models/settlement_model.dart' as _i10;
import 'package:splitzy/models/user_model.dart' as _i5;
import 'package:splitzy/services/auth_service.dart' as _i3;
import 'package:splitzy/services/contacts_service.dart' as _i11;
import 'package:splitzy/services/database_service.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserMetadata_0 extends _i1.SmartFake implements _i2.UserMetadata {
  _FakeUserMetadata_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_1 extends _i1.SmartFake implements _i2.MultiFactor {
  _FakeMultiFactor_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_2 extends _i1.SmartFake implements _i2.IdTokenResult {
  _FakeIdTokenResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_3 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_4 extends _i1.SmartFake
    implements _i2.ConfirmationResult {
  _FakeConfirmationResult_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_5 extends _i1.SmartFake implements _i2.User {
  _FakeUser_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isSignedIn => (super.noSuchMethod(
        Invocation.getter(#isSignedIn),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isSigningIn => (super.noSuchMethod(
        Invocation.getter(#isSigningIn),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i2.UserCredential?> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i4.Future<_i2.UserCredential?>.value(),
      ) as _i4.Future<_i2.UserCredential?>);

  @override
  _i4.Future<_i2.UserCredential?> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.UserCredential?>.value(),
      ) as _i4.Future<_i2.UserCredential?>);

  @override
  _i4.Future<_i2.UserCredential?> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
    required String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
            #name: name,
          },
        ),
        returnValue: _i4.Future<_i2.UserCredential?>.value(),
      ) as _i4.Future<_i2.UserCredential?>);

  @override
  _i4.Future<bool> signInSilently() => (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateUserProfile({
    String? name,
    String? photoUrl,
    String? phoneNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [],
          {
            #name: name,
            #photoUrl: photoUrl,
            #phoneNumber: phoneNumber,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<_i5.SplitzyUser?> getUserById(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [userId],
        ),
        returnValue: _i4.Future<_i5.SplitzyUser?>.value(),
      ) as _i4.Future<_i5.SplitzyUser?>);

  @override
  _i4.Future<List<_i5.SplitzyUser>> searchUsers(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
        ),
        returnValue:
            _i4.Future<List<_i5.SplitzyUser>>.value(<_i5.SplitzyUser>[]),
      ) as _i4.Future<List<_i5.SplitzyUser>>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i7.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<bool> createGroup(_i8.GroupModel? group) => (super.noSuchMethod(
        Invocation.method(
          #createGroup,
          [group],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> updateGroup(_i8.GroupModel? group) => (super.noSuchMethod(
        Invocation.method(
          #updateGroup,
          [group],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteGroup(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #deleteGroup,
          [groupId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> removeMemberFromGroup(
    String? groupId,
    String? memberId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMemberFromGroup,
          [
            groupId,
            memberId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> addMemberToGroup(
    String? groupId,
    String? memberId,
    String? memberName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMemberToGroup,
          [
            groupId,
            memberId,
            memberName,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Stream<List<_i8.GroupModel>> getUserGroups(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserGroups,
          [userId],
        ),
        returnValue: _i4.Stream<List<_i8.GroupModel>>.empty(),
      ) as _i4.Stream<List<_i8.GroupModel>>);

  @override
  _i4.Stream<List<_i9.ExpenseModel>> getGroupExpenses(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupExpenses,
          [groupId],
        ),
        returnValue: _i4.Stream<List<_i9.ExpenseModel>>.empty(),
      ) as _i4.Stream<List<_i9.ExpenseModel>>);

  @override
  _i4.Stream<List<_i10.SettlementModel>> getGroupSettlements(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupSettlements,
          [groupId],
        ),
        returnValue: _i4.Stream<List<_i10.SettlementModel>>.empty(),
      ) as _i4.Stream<List<_i10.SettlementModel>>);

  @override
  _i4.Future<_i8.GroupModel?> getGroup(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #getGroup,
          [groupId],
        ),
        returnValue: _i4.Future<_i8.GroupModel?>.value(),
      ) as _i4.Future<_i8.GroupModel?>);

  @override
  _i4.Future<bool> addExpense(_i9.ExpenseModel? expense) => (super.noSuchMethod(
        Invocation.method(
          #addExpense,
          [expense],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> updateExpense(_i9.ExpenseModel? expense) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateExpense,
          [expense],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteExpense(
    String? expenseId, [
    String? groupId,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteExpense,
          [
            expenseId,
            groupId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Stream<List<_i9.ExpenseModel>> getExpenses(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExpenses,
          [groupId],
        ),
        returnValue: _i4.Stream<List<_i9.ExpenseModel>>.empty(),
      ) as _i4.Stream<List<_i9.ExpenseModel>>);

  @override
  _i4.Stream<List<_i9.ExpenseModel>> getAllExpenses() => (super.noSuchMethod(
        Invocation.method(
          #getAllExpenses,
          [],
        ),
        returnValue: _i4.Stream<List<_i9.ExpenseModel>>.empty(),
      ) as _i4.Stream<List<_i9.ExpenseModel>>);

  @override
  _i4.Future<bool> addSettlement(_i10.SettlementModel? settlement) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSettlement,
          [settlement],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Stream<List<Map<String, dynamic>>> getTransactionHistory(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionHistory,
          [userId],
        ),
        returnValue: _i4.Stream<List<Map<String, dynamic>>>.empty(),
      ) as _i4.Stream<List<Map<String, dynamic>>>);

  @override
  _i4.Stream<List<_i10.SettlementModel>> getAllSettlementsForUser(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSettlementsForUser,
          [userId],
        ),
        returnValue: _i4.Stream<List<_i10.SettlementModel>>.empty(),
      ) as _i4.Stream<List<_i10.SettlementModel>>);

  @override
  _i4.Future<bool> updateSettlement(_i10.SettlementModel? settlement) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSettlement,
          [settlement],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Stream<List<_i10.SettlementModel>> getSettlements(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSettlements,
          [groupId],
        ),
        returnValue: _i4.Stream<List<_i10.SettlementModel>>.empty(),
      ) as _i4.Stream<List<_i10.SettlementModel>>);

  @override
  Map<String, double> calculateBalances(List<_i9.ExpenseModel>? expenses) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateBalances,
          [expenses],
        ),
        returnValue: <String, double>{},
      ) as Map<String, double>);

  @override
  List<Map<String, dynamic>> calculateSettlements(
          Map<String, double>? balances) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateSettlements,
          [balances],
        ),
        returnValue: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ContactsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactsService extends _i1.Mock implements _i11.ContactsService {
  MockContactsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i12.Contact> get contacts => (super.noSuchMethod(
        Invocation.getter(#contacts),
        returnValue: <_i12.Contact>[],
      ) as List<_i12.Contact>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasPermission => (super.noSuchMethod(
        Invocation.getter(#hasPermission),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<bool> requestPermission() => (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> loadContacts() => (super.noSuchMethod(
        Invocation.method(
          #loadContacts,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  List<_i12.Contact> searchContacts(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchContacts,
          [query],
        ),
        returnValue: <_i12.Contact>[],
      ) as List<_i12.Contact>);

  @override
  String? getContactPhone(_i12.Contact? contact) =>
      (super.noSuchMethod(Invocation.method(
        #getContactPhone,
        [contact],
      )) as String?);

  @override
  String? getContactEmail(_i12.Contact? contact) =>
      (super.noSuchMethod(Invocation.method(
        #getContactEmail,
        [contact],
      )) as String?);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCredential extends _i1.Mock implements _i2.UserCredential {
  MockUserCredential() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
      ) as bool);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  _i2.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_0(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i2.UserMetadata);

  @override
  List<_i2.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i2.UserInfo>[],
      ) as List<_i2.UserInfo>);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  _i2.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_1(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i2.MultiFactor);

  @override
  _i4.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<_i2.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i4.Future<_i2.IdTokenResult>.value(_FakeIdTokenResult_2(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i4.Future<_i2.IdTokenResult>);

  @override
  _i4.Future<_i2.UserCredential> linkWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i4.Future<_i2.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<_i2.UserCredential> linkWithProvider(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i4.Future<_i2.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<_i2.UserCredential> reauthenticateWithProvider(
          _i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i4.Future<_i2.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<_i2.UserCredential> reauthenticateWithPopup(
          _i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i4.Future<_i2.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<void> reauthenticateWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserCredential> linkWithPopup(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i4.Future<_i2.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<void> linkWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i2.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i4.Future<_i2.ConfirmationResult>.value(_FakeConfirmationResult_4(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ConfirmationResult>);

  @override
  _i4.Future<_i2.UserCredential> reauthenticateWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i4.Future<_i2.UserCredential>.value(_FakeUserCredential_3(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendEmailVerification(
          [_i2.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i4.Future<_i2.User>.value(_FakeUser_5(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i4.Future<_i2.User>);

  @override
  _i4.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePhoneNumber(
          _i2.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
