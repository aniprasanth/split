// GENERATED CODE - DO NOT MODIFY BY HAND
// This file is generated by build_runner. Please do not edit it manually.

import 'dart:async' as _i2;

import 'package:flutter/material.dart' as _i3;
import 'package:mockito/annotations.dart' as _i1;
import 'package:mockito/mockito.dart' as _i4;
import 'package:splitzy/models/expense_model.dart' as _i5;
import 'package:splitzy/models/group_model.dart' as _i6;
import 'package:splitzy/models/settlement_model.dart' as _i7;
import 'package:splitzy/models/user_model.dart' as _i8;
import 'package:splitzy/services/auth_service.dart' as _i9;
import 'package:splitzy/services/contacts_service.dart' as _i10;
import 'package:splitzy/services/database_service.dart' as _i11;
import 'package:splitzy/services/local_storage_service.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class MockAuthService extends _i4.Mock implements _i9.AuthService {
  MockAuthService() {
    _i4.throwOnMissingStub(this);
  }

  @override
  _i8.SplitzyUser? get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: null,
      ) as _i8.SplitzyUser?);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isSigningIn => (super.noSuchMethod(
        Invocation.getter(#isSigningIn),
        returnValue: false,
      ) as bool);

  @override
  String? get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: null,
      ) as String?);

  @override
  _i2.Future<String> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(#signInWithGoogle, []),
        returnValue: Future<String>.value(''),
      ) as _i2.Future<String>);

  @override
  _i2.Future<bool> signInWithEmailAndPassword(String? email, String? password) =>
      (super.noSuchMethod(
        Invocation.method(#signInWithEmailAndPassword, [email, password]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> createUserWithEmailAndPassword(String? email, String? password) =>
      (super.noSuchMethod(
        Invocation.method(#createUserWithEmailAndPassword, [email, password]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> signOut() => (super.noSuchMethod(
        Invocation.method(#signOut, []),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(#clearError, []),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Future<void> deleteAccount() => (super.noSuchMethod(
        Invocation.method(#deleteAccount, []),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> updateUserProfile({String? name, String? photoUrl, String? phoneNumber}) =>
      (super.noSuchMethod(
        Invocation.method(#updateUserProfile, [], {#name: name, #photoUrl: photoUrl, #phoneNumber: phoneNumber}),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(#getAccessToken, []),
        returnValue: Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<_i8.SplitzyUser?> getUserById(String? userId) => (super.noSuchMethod(
        Invocation.method(#getUserById, [userId]),
        returnValue: Future<_i8.SplitzyUser?>.value(),
      ) as _i2.Future<_i8.SplitzyUser?>);

  @override
  _i2.Future<List<_i8.SplitzyUser>> searchUsers(String? query) => (super.noSuchMethod(
        Invocation.method(#searchUsers, [query]),
        returnValue: Future<List<_i8.SplitzyUser>>.value(<_i8.SplitzyUser>[]),
      ) as _i2.Future<List<_i8.SplitzyUser>>);

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}

class MockDatabaseService extends _i4.Mock implements _i11.DatabaseService {
  MockDatabaseService() {
    _i4.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  String? get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: null,
      ) as String?);

  @override
  _i2.Future<bool> createGroup(_i6.GroupModel? group) => (super.noSuchMethod(
        Invocation.method(#createGroup, [group]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> updateGroup(_i6.GroupModel? group) => (super.noSuchMethod(
        Invocation.method(#updateGroup, [group]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteGroup(String? groupId) => (super.noSuchMethod(
        Invocation.method(#deleteGroup, [groupId]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Stream<List<_i6.GroupModel>> getUserGroups(String? userId) => (super.noSuchMethod(
        Invocation.method(#getUserGroups, [userId]),
        returnValue: Stream<List<_i6.GroupModel>>.empty(),
      ) as _i2.Stream<List<_i6.GroupModel>>);

  @override
  _i2.Stream<List<_i5.ExpenseModel>> getGroupExpenses(String? groupId) => (super.noSuchMethod(
        Invocation.method(#getGroupExpenses, [groupId]),
        returnValue: Stream<List<_i5.ExpenseModel>>.empty(),
      ) as _i2.Stream<List<_i5.ExpenseModel>>);

  @override
  _i2.Stream<List<_i7.SettlementModel>> getGroupSettlements(String? groupId) => (super.noSuchMethod(
        Invocation.method(#getGroupSettlements, [groupId]),
        returnValue: Stream<List<_i7.SettlementModel>>.empty(),
      ) as _i2.Stream<List<_i7.SettlementModel>>);

  @override
  _i2.Future<_i6.GroupModel?> getGroup(String? groupId) => (super.noSuchMethod(
        Invocation.method(#getGroup, [groupId]),
        returnValue: Future<_i6.GroupModel?>.value(),
      ) as _i2.Future<_i6.GroupModel?>);

  @override
  _i2.Future<bool> addMemberToGroup(String? groupId, String? memberId, String? memberName) =>
      (super.noSuchMethod(
        Invocation.method(#addMemberToGroup, [groupId, memberId, memberName]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> removeMemberFromGroup(String? groupId, String? memberId) => (super.noSuchMethod(
        Invocation.method(#removeMemberFromGroup, [groupId, memberId]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> addExpense(_i5.ExpenseModel? expense) => (super.noSuchMethod(
        Invocation.method(#addExpense, [expense]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> updateExpense(_i5.ExpenseModel? expense) => (super.noSuchMethod(
        Invocation.method(#updateExpense, [expense]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteExpense(String? expenseId, [String? groupId]) => (super.noSuchMethod(
        Invocation.method(#deleteExpense, [expenseId, groupId]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Stream<List<_i5.ExpenseModel>> getAllExpenses() => (super.noSuchMethod(
        Invocation.method(#getAllExpenses, []),
        returnValue: Stream<List<_i5.ExpenseModel>>.empty(),
      ) as _i2.Stream<List<_i5.ExpenseModel>>);

  @override
  _i2.Future<bool> addSettlement(_i7.SettlementModel? settlement) => (super.noSuchMethod(
        Invocation.method(#addSettlement, [settlement]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Stream<List<_i7.SettlementModel>> getAllSettlementsForUser(String? userId) => (super.noSuchMethod(
        Invocation.method(#getAllSettlementsForUser, [userId]),
        returnValue: Stream<List<_i7.SettlementModel>>.empty(),
      ) as _i2.Stream<List<_i7.SettlementModel>>);

  @override
  _i2.Stream<List<Map<String, dynamic>>> getTransactionHistory(String? userId) => (super.noSuchMethod(
        Invocation.method(#getTransactionHistory, [userId]),
        returnValue: Stream<List<Map<String, dynamic>>>.empty(),
      ) as _i2.Stream<List<Map<String, dynamic>>>);

  @override
  _i2.Future<Map<String, double>> calculateBalances(String? groupId) => (super.noSuchMethod(
        Invocation.method(#calculateBalances, [groupId]),
        returnValue: Future<Map<String, double>>.value(<String, double>{}),
      ) as _i2.Future<Map<String, double>>);

  @override
  _i2.Future<List<_i7.SettlementModel>> calculateSettlements(String? groupId) => (super.noSuchMethod(
        Invocation.method(#calculateSettlements, [groupId]),
        returnValue: Future<List<_i7.SettlementModel>>.value(<_i7.SettlementModel>[]),
      ) as _i2.Future<List<_i7.SettlementModel>>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(#clearError, []),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}

class MockContactsService extends _i4.Mock implements _i10.ContactsService {
  MockContactsService() {
    _i4.throwOnMissingStub(this);
  }

  @override
  List<dynamic> get contacts => (super.noSuchMethod(
        Invocation.getter(#contacts),
        returnValue: <dynamic>[],
      ) as List<dynamic>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasPermission => (super.noSuchMethod(
        Invocation.getter(#hasPermission),
        returnValue: false,
      ) as bool);

  @override
  String? get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: null,
      ) as String?);

  @override
  _i2.Future<bool> requestPermission() => (super.noSuchMethod(
        Invocation.method(#requestPermission, []),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> loadContacts() => (super.noSuchMethod(
        Invocation.method(#loadContacts, []),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  List<dynamic> searchContacts(String? query) => (super.noSuchMethod(
        Invocation.method(#searchContacts, [query]),
        returnValue: <dynamic>[],
      ) as List<dynamic>);

  @override
  String? getContactPhone(dynamic contact) => (super.noSuchMethod(
        Invocation.method(#getContactPhone, [contact]),
        returnValue: null,
      ) as String?);

  @override
  String? getContactEmail(dynamic contact) => (super.noSuchMethod(
        Invocation.method(#getContactEmail, [contact]),
        returnValue: null,
      ) as String?);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(#clearError, []),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}

class MockLocalStorageService extends _i4.Mock implements _i12.LocalStorageService {
  MockLocalStorageService() {
    _i4.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> upsertCachedExpense(String? key, _i5.ExpenseModel? expense) => (super.noSuchMethod(
        Invocation.method(#upsertCachedExpense, [key, expense]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<_i5.ExpenseModel?> getCachedExpense(String? key) => (super.noSuchMethod(
        Invocation.method(#getCachedExpense, [key]),
        returnValue: Future<_i5.ExpenseModel?>.value(),
      ) as _i2.Future<_i5.ExpenseModel?>);

  @override
  _i2.Future<bool> removeCachedExpense(String? key) => (super.noSuchMethod(
        Invocation.method(#removeCachedExpense, [key]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> clearAll() => (super.noSuchMethod(
        Invocation.method(#clearAll, []),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<Map<String, dynamic>> loadNotificationSettings() => (super.noSuchMethod(
        Invocation.method(#loadNotificationSettings, []),
        returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<bool> saveNotificationSettings(Map<String, dynamic>? settings) => (super.noSuchMethod(
        Invocation.method(#saveNotificationSettings, [settings]),
        returnValue: Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}
